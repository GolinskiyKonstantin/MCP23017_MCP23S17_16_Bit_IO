/*	сохраняем данный файл в кодировке UTF-8		*/

	author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com

// в файле "MCP23x17.h" выставляем нужные настройки
//***** SETUP  ***********************************************************************************************

// MCP23017/MCP23S17 данные микросхемы управляються через SPI (MCP23S17) или I2C (MCP23017)
// для SPI (MCP23S17) максимальная скорость 10МГц
// для I2C (MCP23017) поддерживает скорость 100кГц  400кГц  1.7МГц
		
		// выбираем микросхему
		#define MCP23S17
		//#define MCP23017
		
		// указываем нужный порт
		#if (defined (MCP23S17)) && (!defined (MCP23017))
				#define 	MCP23x17_SPI_HAL 		hspi1			//указываем порт SPI
		#elif (!defined (MCP23S17)) && (defined (MCP23017))
				#define 	MCP23x17_I2C_HAL 		hi2c1			//указываем порт I2C
		#endif
		
		#ifdef MCP23x17_SPI_HAL	
			//--  Cесли используем порт CS для выбора устройства тогда раскомментировать ------------
			// если у нас одно устройство лучше пин CS притянуть к земле( или на порту подать GND )
			
			#define CS_PORT
			
			//----------------------------------------------------------------------------------------
			#ifdef CS_PORT
				#if defined (CS_GPIO_Port)
				#else
					#define CS_GPIO_Port    GPIOB
					#define CS_Pin			GPIO_PIN_12
				#endif
			#endif
			//----------------------------------------------------------------------------------------
		#endif

		// указываем адрес устройства
		#define MCP23x17_A0    											0x00
		#define MCP23x17_A1    											0x00
		#define MCP23x17_A2    											0x00

//*************************************************************************************************************

	#include "MCP23x17.h"
	.........
	.........

main()=============================================================================================================================

	.........
	.........
	.........
	
	// настраиваем микросхему ( по умолчанию стоит IOCON.BANK = 0 )
	MCP23x17_write( MCP23x17_REG_BANK_0_IOCONA, 0x7A);	// bank=0 | int_mirror=1 | add_incr=1 | sda_contr=1 | add_ena(only SPI)=1 | int_mode=0 | int_activ=1 | 0
	
	MCP23x17_write( MCP23x17_REG_BANK_0_IODIRA, 0x00);	// порт A полностью настраиваем на выход
	MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, 0x00);		// устанавливаем на всех пинах порта А логический 0
	
	MCP23x17_write( MCP23x17_REG_BANK_0_IODIRB, 0xFF);	// порт B полностью настраиваем на вход
	MCP23x17_write( MCP23x17_REG_BANK_0_GPPUB, 0xFF);		// включаем на всех пинах порта В внутренюю подтяжку к питанию (100кОм)
	
	MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, MCP23x17_BIT_1);	// устанавливаем пин 1 порта А в логическую 1

while(1)===========================================================================================================================

		//////////////////////////////////////////////////////////////////////////////////////////////////
		uint8_t status_port = 0;	// переменная для чтения текущего состояния порта
		
//		//-------  моргаем светодиодом (порт А пин 0 )------------------------------------------------------
//		status_port = MCP23x17_read( MCP23x17_REG_BANK_0_OLATA );	// читаем текущее состояние порта
//		status_port = status_port &(~MCP23x17_BIT_0);							// устанавливаем пин 0 в лог 0
//		
//		MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, status_port);	// устанавливаем пин 0 порта А в логическую 0
//		
//		HAL_Delay (1000);
//		
//		status_port = MCP23x17_read( MCP23x17_REG_BANK_0_OLATA );	// читаем текущее состояние порта
//		status_port = status_port | MCP23x17_BIT_0;								// устанавливаем пин 0 в лог 1
//		
//		MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, status_port);	// устанавливаем пин 0 порта А в логическую 1
//		
//		HAL_Delay (1000);
//		//--------------------------------------------------------------------------------------------------
		
		//--- работаем с кнопкой ( порт В пин 2 ) подключена к земле -----------------------------------------
		status_port = MCP23x17_read( MCP23x17_REG_BANK_0_GPIOB );	// читаем текущее состояние порта
		
		// проверяем второй пин порта В на нажатие кнопки ( при нажатии там будет 0 )
		if( !(status_port & MCP23x17_BIT_2) ){
			status_port = MCP23x17_read( MCP23x17_REG_BANK_0_OLATA );	// читаем текущее состояние порта
			status_port = status_port | MCP23x17_BIT_0;								// устанавливаем пин 0 в лог 1
			MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, status_port);	// устанавливаем пин 0 порта А в логическую 1
		}
		else{
			status_port = MCP23x17_read( MCP23x17_REG_BANK_0_OLATA );	// читаем текущее состояние порта
			status_port = status_port &(~MCP23x17_BIT_0);							// устанавливаем пин 0 в лог 0		
			MCP23x17_write( MCP23x17_REG_BANK_0_OLATA, status_port);	// устанавливаем пин 0 порта А в логическую 0
		}
		//-----------------------------------------------------------------------------------------------------
		
		//////////////////////////////////////////////////////////////////////////////////////////////////

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
