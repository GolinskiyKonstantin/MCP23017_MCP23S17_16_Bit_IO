/*
	
  ******************************************************************************
  * @file 			( фаил ):   MCP23x17.h
  * @brief 		( описание ):  	
  ******************************************************************************
  * @attention 	( внимание ):	author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
  ******************************************************************************
  
*/

#ifndef _MCP23X17_H
#define _MCP23X17_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ----------------------------------------------------------*/

#include "main.h"


//***** SETUP  ***********************************************************************************************

// MCP23017/MCP23S17 данные микросхемы управляються через SPI (MCP23S17) или I2C (MCP23017)
// для SPI (MCP23S17) максимальная скорость 10МГц
// для I2C (MCP23017) поддерживает скорость 100кГц  400кГц  1.7МГц
		
		// выбираем микросхему
		//#define MCP23S17
		#define MCP23017
		
		// указываем нужный порт
		#if (defined (MCP23S17)) && (!defined (MCP23017))
				#define 	MCP23x17_SPI_HAL 		hspi1			//указываем порт SPI
		#elif (!defined (MCP23S17)) && (defined (MCP23017))
				#define 	MCP23x17_I2C_HAL 		hi2c1			//указываем порт I2C
		#endif
		
		#ifdef MCP23x17_SPI_HAL	
			//--  Cесли используем порт CS для выбора устройства тогда раскомментировать ------------
			// если у нас одно устройство лучше пин CS притянуть к земле( или на порту подать GND )
			
			#define CS_PORT
			
			//----------------------------------------------------------------------------------------
			#ifdef CS_PORT
				#if defined (CS_GPIO_Port)
				#else
					#define CS_GPIO_Port    GPIOB
					#define CS_Pin			GPIO_PIN_12
				#endif
			#endif
			//----------------------------------------------------------------------------------------
		#endif

		// указываем адрес устройства
		#define MCP23x17_A0    											0x00
		#define MCP23x17_A1    											0x00
		#define MCP23x17_A2    											0x00

//*************************************************************************************************************



#define MCP23x17_ADDR  											(0x40|((((MCP23x17_A0)|((MCP23x17_A1)<<1)|((MCP23x17_A2)<<2))<<1)&0x0E))
#define MCP23x17_WRITE 											0x00
#define MCP23x17_READ  											0x01

//-------------------------------------------------------------
#define MCP23x17_BIT_ALL										0xFF
#define MCP23x17_BIT_0											0x01
#define MCP23x17_BIT_1											0x02
#define MCP23x17_BIT_2											0x04
#define MCP23x17_BIT_3											0x08
#define MCP23x17_BIT_4											0x10
#define MCP23x17_BIT_5											0x20
#define MCP23x17_BIT_6											0x40
#define MCP23x17_BIT_7											0x80
//-------------------------------------------------------------



//==================================================================
//------------------------------------------------------------------
// IOCON.BANK = 0
// Registers

//------------------------------------------------------------
// регистр который выставляет пин либо как вход либо как выход 
// 0-выход   1-вход
// по умолчанию ( после ресета все занчения равны 1 настроенв на вход )
#define MCP23x17_REG_BANK_0_IODIRA				0x00
#define MCP23x17_REG_BANK_0_IODIRB				0x01
//------------------------------------------------------------

//------------------------------------------------------------
// регист определяет инверсную работу логики пина в режиме вход
// тоесть подаем на ножку 0 читаться будет как 1
#define MCP23x17_REG_BANK_0_IPOLA					0x02
#define MCP23x17_REG_BANK_0_IPOLB					0x03
//------------------------------------------------------------

//------------------------------------------------------------
// регистр прерываний 
// ( устанавливаем 1 на той ножке на которой нужно прерывание )
#define MCP23x17_REG_BANK_0_GPINTENA			0x04
#define MCP23x17_REG_BANK_0_GPINTENB			0x05
//------------------------------------------------------------

//------------------------------------------------------------
// регистр для прерывания и хранит значения для сравнения
// например если в пин записали 0 то реагировать будет 
// когда на пине будет 1
#define MCP23x17_REG_BANK_0_DEFVALA				0x06
#define MCP23x17_REG_BANK_0_DEFVALB				0x07
//------------------------------------------------------------

//------------------------------------------------------------
// регистр для настройки прерывания, если в пин запишем 0 
// то тогда будет работать режим DEFVAL сравнения 
// то что записали для сравнения ) если стоит 1 то за режим 
// сравнения DEFVAL забываем и будет сравнивать 
// при смене логического уровня на пине
#define MCP23x17_REG_BANK_0_INTCONA				0x08
#define MCP23x17_REG_BANK_0_INTCONB				0x09
//------------------------------------------------------------

//------------------------------------------------------------
// данный регистр служит для двух портов
// и выполняет настройки режимов работы микросхемы
// настройки:
// 7бит - устанавливаем BANK ( внутреняя адресация регистров ) 0 или 1
// 6бит - настройки прерывания 
//		( 0 - на любом порту А или В саботало прерывание будет дергаться обе ножки INT )
//		( 1 - для каждого порта А или В свои пин прерывания )
// 5бит - инкремент ( авто ) адреса регистра 
//		( 0 - если данных будет много то адресс автоматически сдвигаеться) 
//		( 1 - адрес не сдвигаеться для каждого байта нужно отдельно указывать адрес )
// 4бит - контроль ножки SDA помогает ведущему устройству опускать или подымать линию ( 0-вкл   1-выкл ) 
// 3бит - только для MCP23S17 ( 1-включает адрес    0-отключает адрес)
// 2бит - определяет режим работы прерывания пинов ( 1-открытый коллектор   0-обычный выход )
// 1бит - бит определяет активное состояния ножек прерывание INTA INTB 
//		какой сигнал будет на ножке прерывания при срабатывании прерывания
//		( 0-активный низкий лог уровень   1-активный высокий )
// 0бит - не активный там всегда 0
#define MCP23x17_REG_BANK_0_IOCONA				0x0A
#define MCP23x17_REG_BANK_0_IOCONB				0x0B
//------------------------------------------------------------

//------------------------------------------------------------
// регистр подтяжки ножки настроеной как вход к питанию PULLUP
// номинал внутренего резистора 100кОм
// 1-подтянута   0-неподтянута
#define MCP23x17_REG_BANK_0_GPPUA					0x0C
#define MCP23x17_REG_BANK_0_GPPUB					0x0D
//------------------------------------------------------------

//------------------------------------------------------------
// регист только для чтения, при срабатывании прерывания с него считываем
// на какой именно ножке сработало прерывание лог 1 ( так как прерывание на общем порту )
#define MCP23x17_REG_BANK_0_INTFA					0x0E
#define MCP23x17_REG_BANK_0_INTFB					0x0F
//------------------------------------------------------------

//------------------------------------------------------------
// регист защелка который срабатывает в момент прерывания
// можно считать какие напряжения были на всех ножках порта 
// в момент прерывания одно любого пина
#define MCP23x17_REG_BANK_0_INTCAPA				0x10
#define MCP23x17_REG_BANK_0_INTCAPB				0x11
//------------------------------------------------------------

//------------------------------------------------------------
// пин состояния пинов в режиме вход
// читая этот регист знаем какие напряжения подаються в данный момент на пины 1 или 0
#define MCP23x17_REG_BANK_0_GPIOA					0x12
#define MCP23x17_REG_BANK_0_GPIOB					0x13
//------------------------------------------------------------

//------------------------------------------------------------
// регистр который выставляет пины которые сконфигурированные как выход в лог1 или лог0
#define MCP23x17_REG_BANK_0_OLATA					0x14
#define MCP23x17_REG_BANK_0_OLATB					0x15
//----------------------------------------------------------------
//==================================================================



//==================================================================
//------------------------------------------------------------------
// IOCON.BANK = 1
// Registers

//------------------------------------------------------------
// регистр который выставляет пин либо как вход либо как выход 
// 0-выход   1-вход
// по умолчанию ( после ресета все занчения равны 1 настроенв на вход )
#define MCP23x17_REG_BANK_1_IODIRA				0x00
#define MCP23x17_REG_BANK_1_IODIRB				0x10
//------------------------------------------------------------

//------------------------------------------------------------
// регист определяет инверсную работу логики пина в режиме вход
// тоесть подаем на ножку 0 читаться будет как 1
#define MCP23x17_REG_BANK_1_IPOLA					0x01
#define MCP23x17_REG_BANK_1_IPOLB					0x11
//------------------------------------------------------------

//------------------------------------------------------------
// регистр прерываний 
// ( устанавливаем 1 на той ножке на которой нужно прерывание )
#define MCP23x17_REG_BANK_1_GPINTENA			0x02
#define MCP23x17_REG_BANK_1_GPINTENB			0x12
//------------------------------------------------------------

//------------------------------------------------------------
// регистр для прерывания и хранит значения для сравнения
// например если в пин записали 0 то реагировать будет 
// когда на пине будет 1
#define MCP23x17_REG_BANK_1_DEFVALA				0x03
#define MCP23x17_REG_BANK_1_DEFVALB				0x13
//------------------------------------------------------------

//------------------------------------------------------------
// регистр для настройки прерывания, если в пин запишем 0 
// то тогда будет работать режим DEFVAL сравнения 
// то что записали для сравнения ) если стоит 1 то за режим 
// сравнения DEFVAL забываем и будет сравнивать 
// при смене логического уровня на пине
#define MCP23x17_REG_BANK_1_INTCONA				0x04
#define MCP23x17_REG_BANK_1_INTCONB				0x14
//------------------------------------------------------------

//------------------------------------------------------------
// данный регистр служит для двух портов ( настраивать один из них )
// и выполняет настройки режимов работы микросхемы
// настройки:
// 7бит - устанавливаем BANK ( внутреняя адресация регистров ) 0 или 1
// 6бит - настройки прерывания 
//		( 0 - на любом порту А или В саботало прерывание будет дергаться обе ножки INT )
//		( 1 - для каждого порта А или В свои пин прерывания )
// 5бит - инкремент ( авто ) адреса регистра 
//		( 0 - если данных будет много то адресс автоматически сдвигаеться) 
//		( 1 - адрес не сдвигаеться для каждого байта нужно отдельно указывать адрес )
// 4бит - контроль ножки SDA помогает ведущему устройству опускать или подымать линию ( 0-вкл   1-выкл ) 
// 3бит - только для MCP23S17 ( 1-включает адрес    0-отключает адрес)
// 2бит - определяет режим работы прерывания пинов ( 1-открытый коллектор   0-обычный выход )
// 1бит - бит определяет активное состояния ножек прерывание INTA INTB 
//		какой сигнал будет на ножке прерывания при срабатывании прерывания
//		( 0-активный низкий лог уровень   1-активный высокий )
// 0бит - не активный там всегда 0
#define MCP23x17_REG_BANK_1_IOCONA				0x05
#define MCP23x17_REG_BANK_1_IOCONB				0x15
//------------------------------------------------------------

//------------------------------------------------------------
// регистр подтяжки ножки настроеной как вход к питанию PULLUP
// номинал внутренего резистора 100кОм
// 1-подтянута   0-неподтянута
#define MCP23x17_REG_BANK_1_GPPUA					0x06
#define MCP23x17_REG_BANK_1_GPPUB					0x16
//------------------------------------------------------------

//------------------------------------------------------------
// регист только для чтения, при срабатывании прерывания с него считываем
// на какой именно ножке сработало прерывание лог 1 ( так как прерывание на общем порту )
#define MCP23x17_REG_BANK_1_INTFA					0x07
#define MCP23x17_REG_BANK_1_INTFB					0x17
//------------------------------------------------------------

//------------------------------------------------------------
// регист защелка который срабатывает в момент прерывания
// можно считать какие напряжения были на всех ножках порта 
// в момент прерывания одно любого пина
#define MCP23x17_REG_BANK_1_INTCAPA				0x08
#define MCP23x17_REG_BANK_1_INTCAPB				0x18
//------------------------------------------------------------

//------------------------------------------------------------
// пин состояния пинов в режиме вход
// читая этот регист знаем какие напряжения подаються в данный момент на пины 1 или 0
#define MCP23x17_REG_BANK_1_GPIOA					0x09
#define MCP23x17_REG_BANK_1_GPIOB					0x19
//------------------------------------------------------------

//------------------------------------------------------------
// регистр который выставляет пины которые сконфигурированные как выход в лог1 или лог0
#define MCP23x17_REG_BANK_1_OLATA					0x0A
#define MCP23x17_REG_BANK_1_OLATB					0x1A
//----------------------------------------------------------------
//==================================================================


/* Functions prototypes ----------------------------------------------*/

void MCP23x17_write(uint8_t addr, uint8_t data);
uint8_t MCP23x17_read(uint8_t addr);

//------------------------------------------------------------------------------------


#ifdef __cplusplus
}
#endif

#endif	/*	_MCP23X17_H */

/************************ (C) COPYRIGHT GKP *****END OF FILE****/
